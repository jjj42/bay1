{"version":3,"sources":["app.ts","bay-objects.ts","contact-detail.ts","contact-list.ts","environment.ts","main.ts","messages.ts","no-selection.ts","utility.ts","web-api.ts","resources/index.ts","resources/elements/loading-indicator.ts","person-detail.ts","person-list.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["    \nimport {Router, RouterConfiguration} from 'aurelia-router';\nimport {inject} from 'aurelia-framework';\nimport {WebAPI} from './web-api';\n\n@inject(WebAPI)\nexport class App {\n  router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = 'Persons';                                            // default browser title\n    config.map([\n      { route: '',             moduleId: 'no-selection',   title: 'Select'}, // individual browser title\n      { route: 'persons/:id',  moduleId: 'person-detail', name:'persons' } // name:  We'll be able to use this later to generate routes without needing to copy/paste the route pattern everywhere. Instead, we can just refer to the route by name.\n    ]);\n    // Whenever you have a configureRouter method, the view must also contain a router-view. - app.html\n\n    this.router = router;\n  }\n}\n\n  ","\ninterface Person {\n\tid: number;\n\tfirstName: string;\n\tlastName: string;\n\tphone: string;\n\tmobile: string;\n\temail: string;\n\tjobRole: string;\n\tisUser: Boolean;\n\tpassword: string;\n\tmodTime: Date;\n\t// alte / importierte Datenwerte sollten unions sein:\n\t// _phone: number|string;\n}\n/** Contact with id, firstName, lastName, phone, email */\nexport class Contact implements Person {\n\tid: number;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\tphone: string;\n\tmobile: string;\n\temail: string;\n\tjobRole: string;\n\tisUser: Boolean= false;\n\tpassword: string= null;\n\tmodTime: Date;\n}\n\ninterface Artist {\n\tagency: Company;\n}\n\nexport class Actor implements Person, Artist{\n\tid: number;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\tphone: string;\n\tmobile: string;\n\temail: string;\n\tjobRole: string;\n\tisUser: Boolean= false;\n\tpassword: string= null;\n\tmodTime: Date;\n\tagency: Company;\n}\nexport class Narrator implements Person, Artist{\n\tid: number;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\tphone: string;\n\tmobile: string;\n\temail: string;\n\tjobRole: string;\n\tisUser: Boolean= false;\n\tpassword: string= null;\n\tmodTime: Date;\n\tagency: Company;\n}\nexport class Musician implements Person, Artist{\n\tid: number;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\tphone: string;\n\tmobile: string;\n\temail: string;\n\tjobRole: string;\n\tisUser: Boolean= false;\n\tpassword: string= null;\n\tmodTime: Date;\n\tagency: Company;\n}\n\nexport class Buyout{\n\tid: number;\n\ttype: BuyoutType;\n\tartistID: number;\n\tcountry: Country;\n\tfrom: Date;\n\tto: Date;\n\tmedium: String;\n\treminder: Date = null;\n}\n\nenum BuyoutType { Actor, Narrator, Music };\nenum CompanyType { _self, Customer, Agency, Production, Advertising, Brand, Audio, Music, Post, Scan, Storage }; // kann man Enums mit Werten aus DB befüllen?\nenum Country {Germany, Denmark};\t//muss gelegentlich akutalisiert & erweitert werden.\nenum Language {German, Danish};\n\ninterface Company {\n\tid: number;\n\tname: string;\n\ttype: CompanyType;\n\tphone1: string;\n\tphone2: string;\n\temail: string\n\tcity: string;\n\tareacode: string;\n\tstreet: string;\n\tmodTime: Date;\n\tcontacts: Contact[]; \n\tgetType(): CompanyType;\n}\n\n\nexport class Customer<T1 extends Company>{\n\tconstructor(public Company: T1) {\n\n\t}\n}\n\n\nexport class Clip{\n\tid: number;\n\tname: string;\n\tdate1Airing: Date;\n\tlanguage: Language;\n\tsubtitles: Language;\n\tactors: Actor[];\n\tnarrators: Narrator[];\n\tbuyouts: Buyout[];\n\tcompanies: Company[];\t// so???\n\tcustomer: Company= null;\n\tagency: Company= null;\t// personalagentur?\n\tproduction: Company= null;\n\taudioRec: Company= null;\n\taudioMix: Company= null;\n\tmusic: Company= null;\n\toffline: Company= null;\n\tstorage: Company= null;\n\t// oder ein clipCompany Object/enum/union, das bestimmte und ggf weitere companies enthält?\n}\n\nexport class Prefs{\n\n}","    \nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {WebAPI} from './web-api';\nimport {PersonUpdated,PersonViewed,userStatusChanged} from './messages';\nimport {areEqual} from './utility';\n\ninterface Person {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\n@inject(WebAPI,EventAggregator)\n\nexport class PersonDetail {\n  routeConfig;\n  Person: Person;\n  originalPerson: Person;\n\n  constructor(private api: WebAPI, private ea: EventAggregator) { }\n\n  /**one of many life-cycle methods for _routed_ components. activate gets invoked right before the router is about to activate the component. \n   * This is also how the router passes the component its route parameters.  */\n  activate(params, routeConfig) {\n    this.routeConfig = routeConfig; /* This is the same configuration object that you created to configure the router itself. \n    You can get access to that here so that you can access any of its properties. The router generates a navModel for each routeConfig. \n    Using the navModel you can dynamically set the title of the document for this route. So, we call navModel.setTitle() in order to set up the document's title with the name of the Person that we just loaded.*/\n\n    return this.api.getPersonDetails(params.id).then(Person => {\n      this.Person = <Person>Person;\n      this.routeConfig.navModel.setTitle(this.Person.firstName);\n      this.originalPerson = JSON.parse(JSON.stringify(this.Person));\n      this.ea.publish(new PersonViewed(this.Person));\n    });\n  }\n\n  get canSave() {\n    return this.Person.firstName && this.Person.lastName && !this.api.isRequesting; // isRequesting ist attribut in WebAPI Class\n  }\n\n  save() {\n    this.api.savePerson(this.Person).then(Person => {\n      this.Person = <Person>Person;\n      this.routeConfig.navModel.setTitle(this.Person.firstName);\n      this.originalPerson = JSON.parse(JSON.stringify(this.Person));\n      this.ea.publish(new PersonUpdated(this.Person));\n    });\n  }\n\n  /** method of routed components.  it's a 'Hook'\n   *  If present, this method is called before navigating away from the current component. \n   * It gives your component an opportunity to cancel navigation, if it desires.\n  */\n  canDeactivate() {\n    if (!areEqual(this.originalPerson, this.Person)) {            // ist aus der 'utility' datei\n      let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\n\n      if(!result) {\n        this.ea.publish(new PersonViewed(this.Person));\n      }\n      return result;\n    }\n\n    return true;\n  }\n\n  becomesUser() {\n    this.api.savePerson(this.Person).then(Person => {\n      this.originalPerson = JSON.parse(JSON.stringify(this.Person));\n      this.ea.publish(new userStatusChanged(this.Person.isUser));\n    });\n  }\n\n\n}\n\n  ","    \nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {WebAPI} from './web-api';\nimport {ContactUpdated, ContactViewed} from './messages';\nimport {inject} from 'aurelia-framework';\n\n@inject(WebAPI, EventAggregator)\nexport class ContactList {\n  contacts;\n  selectedId = 0;\n\n  constructor(private api: WebAPI, ea: EventAggregator) { \n    ea.subscribe(ContactViewed, msg => this.select(msg.contact)); //select() ist funktion unten - vergibt style.\n    ea.subscribe(ContactUpdated, msg => {     //  subscribe passing it the message type and a callback.\n      let id = msg.contact.id;\n      let found = this.contacts.find(x => x.id == id);\n      Object.assign(found, msg.contact);\n    });\n  }\n\n  created() {\n    this.api.getContactList().then(contacts => this.contacts = contacts);\n  }\n\n/** to instantly apply the selection style. Finally, normal use of .trigger or .delegate causes the default action of the event to be cancelled. \n * But, if you return true from your method, as we have done above, it will be allowed to continue.  */\n  select(contact) {\n    this.selectedId = contact.id;\n    return true;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","/**PersonUpdated\n * Whenever the Person detail screen successfully saves a Person, we'll publish the PersonUpdated message.\n * Each of these messages will carry the Person data along with it so that subscribers have contextual data related to the event.\n */\nexport class PersonUpdated {\n  constructor(public person) { }\n}\n/**PersonViewed \n * whenever the end user begins viewing a new Person, we'll publish the PersonViewed message. \n */\nexport class PersonViewed {\n  constructor(public person) { }\n}\n\n\nexport class userStatusChanged {\n  constructor(public person) { }\n}","\n    \nexport class NoSelection {\n  message = \"Please Select a Person.\";\n}\n\n  \n","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 1500;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet persons = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phone:'867-5309',\n    mobile: '0239023',\n  \tjobRole: 'Art Director',\n\t  isUser: false,\n  \tpassword: '02340249',\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phone:'867-5309',\n    mobile: '0239023',\n  \tjobRole: 'Art Director',\n\t  isUser: false,\n  \tpassword: '02340249',\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phone:'867-23424243',\n    mobile: '0239023',\n  \tjobRole: 'Art Director',\n\t  isUser: false,\n  \tpassword: null,\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phone:'867-23424243',\n    mobile: '0239023',\n  \tjobRole: 'Art Director',\n\t  isUser: false,\n  \tpassword: '',\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phone:'867-213213123',\n    mobile: '0239023',\n  \tjobRole: 'Art Director',\n\t  isUser: false,\n  \tpassword: 'kein passwort',\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Hank',\n    lastName:'DEA',\n    email:'hank@dea.org',\n    phone:'234234-234234',\n    mobile: '0239023',\n  \tjobRole: 'DEA Agent',\n\t  isUser: true,\n  \tpassword: 'geheim',\n\t  modTime: '1968-11-16T00:00:00'\n  },\n  {\n    id:getId(),\n    firstName:'Fox',\n    lastName:'Moulder',\n    email:'fox@fbi.org',\n    phone:'234234-234234',\n    mobile: '0239023',\n  \tjobRole: 'Poser',\n\t  isUser: true,\n  \tpassword: 'auch geheim',\n\t  modTime: '1968-11-16T00:00:00'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getPersonList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = persons.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email,\n          phone:x.phone,\n          mobile:x.mobile,\n          jobRole:x.jobRole,\n          isUser:x.isUser,\n          password:x.password,\n          modTime:x.modTime\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getPersonDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = persons.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  savePerson(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = persons.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = persons.indexOf(found);\n          persons[index] = instance;\n        }else{\n          instance.id = getId();\n          persons.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","/**Previously, when we created the contact-list component, we required that into the app.html view and used it, \n * since all views are encapsulated. \n * However, we're going to do something different in this case, as an example. \n * Aurelia actually gives you the ability to globalize view resources, such as custom elements. \n * This is a convenience so that you don't have to require common resources repeatedly into every view. \n * To do this, we need to register our element as a global resource.  */\n\nimport {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n\n/*  With this registration in place, we can now use our new indicator in our app.html, \nbut before we do that, we want to make one more change to our app.ts. \nWe would like to be able to bind the indicator to the request state of our API, \nso we need to make that available in our App class. */\n","    \nimport * as nprogress from 'nprogress';\nimport {bindable, noView} from 'aurelia-framework'; \n    //noView because nprogress handles the rendering itself, no aurelia rendering (the loading-indicator.html) required.\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n  @bindable loading = false;\n\n  loadingChanged(newValue) {\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n}\n\n  ","    \nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {WebAPI} from './web-api';\nimport {PersonUpdated,PersonViewed,userStatusChanged} from './messages';\nimport {areEqual} from './utility';\n\ninterface Person {\n  firstName: string;\n  lastName: string;\n  email: string;\n\tphone: string;\n\tmobile: string;\n\tjobRole: string;\n\tisUser: Boolean;\n\tpassword: string;\n\tmodTime: Date;\n}\n\n@inject(WebAPI,EventAggregator)\n\nexport class PersonDetail {\n  routeConfig;\n  person: Person;\n  originalPerson: Person;\n\n  constructor(private api: WebAPI, private ea: EventAggregator) { }\n\n  /**one of many life-cycle methods for _routed_ components. activate gets invoked right before the router is about to activate the component. \n   * This is also how the router passes the component its route parameters.  */\n  activate(params, routeConfig) {\n    this.routeConfig = routeConfig; /* This is the same configuration object that you created to configure the router itself. \n    You can get access to that here so that you can access any of its properties. The router generates a navModel for each routeConfig. \n    Using the navModel you can dynamically set the title of the document for this route. So, we call navModel.setTitle() in order to set up the document's title with the name of the Person that we just loaded.*/\n\n    return this.api.getPersonDetails(params.id).then(person => {\n      this.person = <Person>person;\n      this.routeConfig.navModel.setTitle(this.person.firstName);\n      this.originalPerson = JSON.parse(JSON.stringify(this.person));\n      this.ea.publish(new PersonViewed(this.person));\n    });\n  }\n\n  get canSave() {\n    return this.person.firstName && this.person.lastName && !this.api.isRequesting; // isRequesting ist attribut in WebAPI Class\n  }\n\n  save() {\n    this.api.savePerson(this.person).then(person => {\n      this.person = <Person>person;\n      this.routeConfig.navModel.setTitle(this.person.firstName);\n      this.originalPerson = JSON.parse(JSON.stringify(this.person));\n      this.ea.publish(new PersonUpdated(this.person));\n    });\n  }\n\n  /** method of routed components.  it's a 'Hook'\n   *  If present, this method is called before navigating away from the current component. \n   * It gives your component an opportunity to cancel navigation, if it desires.\n  */\n  canDeactivate() {\n    if (!areEqual(this.originalPerson, this.person)) {            // ist aus der 'utility' datei\n      let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\n\n      if(!result) {\n        this.ea.publish(new PersonViewed(this.person));\n      }\n      return result;\n    }\n\n    return true;\n  }\n\n  becomesUser() {\n    this.api.savePerson(this.person).then(person => {\n      this.originalPerson = JSON.parse(JSON.stringify(this.person));\n      this.ea.publish(new userStatusChanged(this.person.isUser));\n    });\n  }\n\n\n}\n\n  ","    \nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {WebAPI} from './web-api';\nimport {PersonUpdated, PersonViewed} from './messages';\nimport {inject} from 'aurelia-framework';\n\n@inject(WebAPI, EventAggregator)\nexport class PersonList {\n  persons;\n  selectedId = 0;\n\n  constructor(private api: WebAPI, ea: EventAggregator) { \n    ea.subscribe(PersonViewed, msg => this.select(msg.person)); //select() ist funktion unten - vergibt style.\n    ea.subscribe(PersonUpdated, msg => {     //  subscribe passing it the message type and a callback.\n      let id = msg.person.id;\n      let found = this.persons.find(x => x.id == id);\n      Object.assign(found, msg.person);\n    });\n  }\n\n  created() {\n    this.api.getPersonList().then(persons => this.persons = persons);\n  }\n\n/** to instantly apply the selection style. Finally, normal use of .trigger or .delegate causes the default action of the event to be cancelled. \n * But, if you return true from your method, as we have done above, it will be allowed to continue.  */\n  select(person) {\n    this.selectedId = person.id;\n    return true;\n  }\n}\n"],"sourceRoot":".."}